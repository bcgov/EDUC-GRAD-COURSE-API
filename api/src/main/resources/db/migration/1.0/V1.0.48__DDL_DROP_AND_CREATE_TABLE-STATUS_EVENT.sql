DROP TABLE STATUS_EVENT CASCADE CONSTRAINTS PURGE;

CREATE TABLE "STATUS_EVENT"
   (	"EVENT_ID" RAW(16) NOT NULL ENABLE,
        "EVENT_PAYLOAD" BLOB NOT NULL ENABLE,
        "EVENT_STATUS" VARCHAR2(50) NOT NULL ENABLE,
        "EVENT_TYPE" VARCHAR2(100) NOT NULL ENABLE,
        "SAGA_ID" RAW(16),
        "ACTIVITY_CODE" VARCHAR2(15),
        "EVENT_OUTCOME" VARCHAR2(100) NOT NULL ENABLE,
        "REPLY_CHANNEL" VARCHAR2(100),
        "CREATE_USER" VARCHAR2(100) DEFAULT USER NOT NULL ENABLE,
        "CREATE_DATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP NOT NULL ENABLE,
        "UPDATE_USER" VARCHAR2(100) DEFAULT USER NOT NULL ENABLE,
        "UPDATE_DATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP NOT NULL ENABLE,
	 CONSTRAINT "STATUS_EVENT_ID_PK" PRIMARY KEY ("EVENT_ID")
	 USING INDEX TABLESPACE "API_GRAD_IDX" ENABLE
   ) SEGMENT CREATION IMMEDIATE
 NOCOMPRESS LOGGING
   TABLESPACE "API_GRAD_DATA"   NO INMEMORY
  LOB ("EVENT_PAYLOAD") STORE AS SECUREFILE (
   TABLESPACE "API_GRAD_BLOB_DATA" ENABLE STORAGE IN ROW CHUNK 8192);

CREATE INDEX "EVENT_STATUS_IDX" ON "STATUS_EVENT" ("EVENT_STATUS")
TABLESPACE "API_GRAD_IDX";

CREATE INDEX "EVENT_TYPE_IDX" ON "STATUS_EVENT" ("EVENT_TYPE")
TABLESPACE "API_GRAD_IDX";

COMMENT ON TABLE STATUS_EVENT IS 'This table is used to store all the received choreographed events from different api via pub/sub model and process them.';

GRANT SELECT ON STATUS_EVENT TO GRAD_READONLY;
